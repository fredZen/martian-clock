{
"version":3,
"file":"module$node_modules$d3_polygon$dist$d3_polygon.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/d3-polygon/dist/d3-polygon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_polygon$dist$d3_polygon\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-polygon/ v1.0.5 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction area(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","d3","cross","a","b","c","lexicographicOrder","computeUpperHullIndexes","points","n","length","indexes","size","i","slice","polygonArea","area","polygon","polygonCentroid","centroid","x","y","k","polygonHull","hull","sortedPoints","Array","flippedPoints","sort","upperIndexes","lowerIndexes","skipLeft","skipRight","push","polygonContains","contains","point","p","x0","y0","x1","inside","y1","polygonLength","xb","yb","perimeter","xa","ya","Math","sqrt","Object","defineProperty","value"]
}
