{
"version":3,
"file":"module$node_modules$d3_scale$dist$d3_scale.js",
"lineCount":46,
"mappings":"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",
"sources":["node_modules/d3-scale/dist/d3-scale.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_scale$dist$d3_scale\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-scale/ v2.2.2 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Array,d3Interpolate,d3Format,d3Time,d3TimeFormat) { 'use strict';\n\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n\nvar array = Array.prototype;\n\nvar map = array.map;\nvar slice = array.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal() {\n  var index = d3Collection.map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = d3Collection.map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = d3Interpolate.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3Interpolate.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = d3Array.tickStep(start, stop, count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = d3Array.tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = d3Array.tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = d3Array.tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction identity$1(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity$1(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nfunction log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nfunction powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nfunction pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n\nfunction quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number$1(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(d3Array.tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number$1)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return initRange.apply(calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n\nfunction utcTime() {\n  return initRange.apply(calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n\nfunction transformer$1() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nfunction copy$1(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction sequential() {\n  var scale = linearish(transformer$1()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialLog() {\n  var scale = loggish(transformer$1()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSymlog() {\n  var scale = symlogish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialPow() {\n  var scale = powish(transformer$1());\n\n  scale.copy = function() {\n    return copy$1(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((d3Array.bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction transformer$2() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nfunction diverging() {\n  var scale = linearish(transformer$2()(identity));\n\n  scale.copy = function() {\n    return copy$1(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingLog() {\n  var scale = loggish(transformer$2()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSymlog() {\n  var scale = symlogish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingPow() {\n  var scale = powish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n\nexports.scaleBand = band;\nexports.scalePoint = point;\nexports.scaleIdentity = identity$1;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleSymlog = symlog;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile;\nexports.scaleQuantize = quantize;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.scaleSequential = sequential;\nexports.scaleSequentialLog = sequentialLog;\nexports.scaleSequentialPow = sequentialPow;\nexports.scaleSequentialSqrt = sequentialSqrt;\nexports.scaleSequentialSymlog = sequentialSymlog;\nexports.scaleSequentialQuantile = sequentialQuantile;\nexports.scaleDiverging = diverging;\nexports.scaleDivergingLog = divergingLog;\nexports.scaleDivergingPow = divergingPow;\nexports.scaleDivergingSqrt = divergingSqrt;\nexports.scaleDivergingSymlog = divergingSymlog;\nexports.tickFormat = tickFormat;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","d3","d3Collection","d3Array","d3Interpolate","d3Format","d3Time","d3TimeFormat","initRange","domain","range","arguments","length","initInterpolator","interpolator","ordinal","scale","d","key","i","index","get","unknown","implicit","set","push","map","scale.domain","_","slice","n","has","scale.range","call","scale.unknown","copy","scale.copy","apply","band","rescale","reverse","start","stop","step","Math","max","paddingInner","paddingOuter","round","floor","align","bandwidth","values","ordinalRange","undefined","rangeRound","scale.rangeRound","scale.bandwidth","scale.step","scale.round","padding","scale.padding","min","scale.paddingInner","scale.paddingOuter","scale.align","pointish","constant","x","number","identity","normalize","a","b","isNaN","NaN","clamper","t","bimap","interpolate","d0","d1","r0","r1","polymap","j","Array","r","bisect","source","target","clamp","transformer","piecewise","output","input","transform","unit","untransform","invert","scale.invert","y","interpolateNumber","interpolateRound","scale.clamp","scale.interpolate","u","continuous","tickFormat","count","specifier","tickStep","precision","formatSpecifier","type","value","abs","precisionPrefix","formatPrefix","precisionRound","precisionFixed","format","linearish","ticks","scale.ticks","scale.tickFormat","nice","scale.nice","i0","i1","tickIncrement","ceil","linear","identity$1","interval","x0","x1","transformLog","log","transformExp","exp","transformLogn","transformExpn","pow10","isFinite","powp","base","E","pow","logp","log10","log2","reflect","f","loggish","logs","pows","scale.base","v","z","k","p","Infinity","transformSymlog","c","sign","log1p","transformSymexp","expm1","symlogish","scale.constant","symlog","transformPow","exponent","transformSqrt","sqrt","transformSquare","powish","scale.exponent","quantile","thresholds","invertExtent","scale.invertExtent","indexOf","sort","ascending","quantiles","scale.quantiles","quantize","scale.thresholds","threshold","date","Date","number$1","calendar","year","month","week","day","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickInterval","bisector","right","tickIntervals","durationYear","every","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","t0","t1","transformer$1","k10","scale.interpolator","copy$1","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialQuantile","transformer$2","k21","x2","t2","diverging","divergingLog","divergingSymlog","divergingPow","array","prototype","name","scaleBand","scalePoint","point","scaleIdentity","scaleLinear","scaleLog","scaleSymlog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","time","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","scaleUtc","utcTime","utcYear","utcMonth","utcWeek","utcDay","utcHour","utcMinute","utcSecond","utcMillisecond","utcFormat","UTC","scaleSequential","scaleSequentialLog","scaleSequentialPow","scaleSequentialSqrt","sequentialSqrt","scaleSequentialSymlog","scaleSequentialQuantile","scaleDiverging","scaleDivergingLog","scaleDivergingPow","scaleDivergingSqrt","divergingSqrt","scaleDivergingSymlog","Object","defineProperty"]
}
