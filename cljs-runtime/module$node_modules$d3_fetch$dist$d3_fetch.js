shadow$provide.module$node_modules$d3_fetch$dist$d3_fetch=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$d3_dsv$dist$d3_dsv")):"function"===typeof define&&define.amd?define(["exports","d3-dsv"],factory):factory(global.d3=global.d3||{},global.d3)})(this,function(exports,d3Dsv){function responseBlob(response){if(!response.ok)throw Error(response.status+
" "+response.statusText);return response.blob()}function responseArrayBuffer(response){if(!response.ok)throw Error(response.status+" "+response.statusText);return response.arrayBuffer()}function responseText(response){if(!response.ok)throw Error(response.status+" "+response.statusText);return response.text()}function text(input,init){return fetch(input,init).then(responseText)}function dsvParse(parse){return function(input,init,row){2===arguments.length&&"function"===typeof init&&(row=init,init=void 0);
return text(input,init).then(function(response){return parse(response,row)})}}function responseJson(response){if(!response.ok)throw Error(response.status+" "+response.statusText);return response.json()}function parser(type){return function(input,init){return text(input,init).then(function(text$$1){return(new DOMParser).parseFromString(text$$1,type)})}}var csv=dsvParse(d3Dsv.csvParse),tsv=dsvParse(d3Dsv.tsvParse),xml=parser("application/xml"),html=parser("text/html"),svg=parser("image/svg+xml");exports.blob=
function(input,init){return fetch(input,init).then(responseBlob)};exports.buffer=function(input,init){return fetch(input,init).then(responseArrayBuffer)};exports.dsv=function(delimiter,input,init,row){3===arguments.length&&"function"===typeof init&&(row=init,init=void 0);var format=d3Dsv.dsvFormat(delimiter);return text(input,init).then(function(response){return format.parse(response,row)})};exports.csv=csv;exports.tsv=tsv;exports.image=function(input,init){return new Promise(function(resolve,reject){var image=
new Image,key;for(key in init)image[key]=init[key];image.onerror=reject;image.onload=function(){resolve(image)};image.src=input})};exports.json=function(input,init){return fetch(input,init).then(responseJson)};exports.text=text;exports.xml=xml;exports.html=html;exports.svg=svg;Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$d3_fetch$dist$d3_fetch.js.map
