{
"version":3,
"file":"module$node_modules$d3_contour$dist$d3_contour.js",
"lineCount":17,
"mappings":"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,gBAAvB,CAAgC,CAE1G,SAAS,CAACH,MAAD,CAASI,OAAT,CAAkB,CACT,QAAnB,GAAA,MAAOD,iBAAP,EAAiD,WAAjD,GAA+B,MAAOD,OAAtC,CAA+DE,OAAA,CAAQD,gBAAR,CAAiBF,OAAA,CAAQ,4CAAR,CAAjB,CAA/D,CACkB,UAAlB,GAAA,MAAOI,OAAP,EAAgCA,MAAAC,IAAhC,CAA6CD,MAAA,CAAO,CAAC,SAAD,CAAY,UAAZ,CAAP,CAAgCD,OAAhC,CAA7C,CACCA,OAAA,CAASJ,MAAAO,GAAT,CAAqBP,MAAAO,GAArB,EAAkC,EAAlC,CAAsCP,MAAAO,GAAtC,CAH2B,CAA3B,CAAA,CAIC,IAJD,CAIQ,QAAS,CAACJ,OAAD,CAASK,OAAT,CAAkB,CAMpCC,QAASA,UAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACvB,MAAOD,EAAP,CAAWC,CADY,CAUzBC,QAASA,SAAQ,CAACC,CAAD,CAAI,CACnB,MAAO,SAAQ,EAAG,CAChB,MAAOA,EADS,CADC;AAkCrBC,QAASA,KAAI,EAAG,EAqBhBC,QAASA,SAAQ,EAAG,CAMlBA,QAASA,SAAQ,CAACC,MAAD,CAAS,CACxB,IAAIC,GAAKC,SAAA,CAAUF,MAAV,CAGT,IAAKG,KAAAC,QAAA,CAAcH,EAAd,CAAL,CAKEA,EAAA,CAAKA,EAAAI,MAAA,EAAAC,KAAA,CAAgBb,SAAhB,CALP,KAAwB,CAAA,IAClBc,OAASf,OAAAgB,OAAA,CAAeR,MAAf,CADS,CACeS,MAAQF,MAAA,CAAO,CAAP,CAAWG,OAAAA,CAAOH,MAAA,CAAO,CAAP,CAC/DN,GAAA,CAAKT,OAAAmB,SAAA,CAAiBF,KAAjB,CAAwBC,MAAxB,CAA8BT,EAA9B,CACLA,GAAA,CAAKT,OAAAoB,MAAA,CAAcC,IAAAC,MAAA,CAAWL,KAAX,CAAmBR,EAAnB,CAAd,CAAuCA,EAAvC,CAA2CY,IAAAC,MAAA,CAAWJ,MAAX,CAAkBT,EAAlB,CAA3C,CAAmEA,EAAnE,CAAuEA,EAAvE,CAHiB,CAQxB,MAAOA,GAAAc,IAAA,CAAO,QAAQ,CAACC,KAAD,CAAQ,CAC5B,MAAOC,QAAA,CAAQjB,MAAR,CAAgBgB,KAAhB,CADqB,CAAvB,CAZiB,CAmB1BC,QAASA,QAAO,CAACjB,MAAD,CAASgB,KAAT,CAAgB,CAAA,IAC1BE,SAAW,EADe,CAE1BC,MAAQ,EAEZC,SAAA,CAASpB,MAAT,CAAiBgB,KAAjB,CAAwB,QAAQ,CAACK,IAAD,CAAO,CACrCC,MAAA,CAAOD,IAAP,CAAarB,MAAb,CAAqBgB,KAArB,CAzFJ,KAFkB,IACdO;AAAI,CADU,CACPC,EA2FEH,IA3FEI,OADG,CACUC,KA2FfL,IA3FsB,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAPE,CA2FfL,IA3FuC,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAxBK,CA2FfL,IA3FoD,CAAKG,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAArCE,CA2FfL,IA3FqE,CAAK,CAAL,CAAA,CAAQ,CAAR,CAClF,CAAO,EAAEE,CAAT,CAAaC,CAAb,CAAA,CAAgBE,IAAA,EA0FHL,IA1FW,CAAKE,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAR,CA0FHF,IA1F4B,CAAKE,CAAL,CAAA,CAAQ,CAAR,CAAzB,CA0FHF,IA1FyC,CAAKE,CAAL,CAAS,CAAT,CAAA,CAAY,CAAZ,CAAtC,CA0FHF,IA1F0D,CAAKE,CAAL,CAAA,CAAQ,CAAR,CA0FlD,EAAjB,CAzFGG,IAyFH,CAAoBR,QAAAS,KAAA,CAAc,CAACN,IAAD,CAAd,CAApB,CACKF,KAAAQ,KAAA,CAAWN,IAAX,CAHgC,CAAvC,CAMAF,MAAAS,QAAA,CAAc,QAAQ,CAACC,aAAD,CAAO,CAC3B,IAD2B,IAClBN,EAAI,CADc,CACXC,EAAIN,QAAAO,OADO,CACUK,OAArC,CAA8CP,CAA9C,CAAkDC,CAAlD,CAAqD,EAAED,CAAvD,CAA0D,CArFlC,CAAA,CAAA,CAsFT,IAAA,yBAAA,CAACO,OAAD,CAAWZ,QAAA,CAASK,CAAT,CAAX,EAAwB,CAAxB,CApFnB,KAoF+CM,IAAAA,KAAAA,aAAAA,CArF3CN,WAAK,EAqFsCM,CArFnCL,WAAIK,IAAAJ,OAChB,CAAO,EAAEF,UAAT,CAAaC,UAAb,CAAA,CAAgB,CAIiB,CAAA,CAAA,CAJIH,IAAAA,EAAAA,wBAMrC,KAN2C,IAAA,MAAAQ,IAAA,CAAKN,UAAL,CAAA,CAKvC1B,EAAIkC,KAAA,CAAM,CAAN,CALmC,CAKzBC,EAAID,KAAA,CAAM,CAAN,CALqB,CAKXE;AAAY,EALD,CAMlCV,WAAI,CAN8B,CAM3BC,WAAIH,CAAAI,OANuB,CAMVS,EAAIV,UAAJU,CAAQ,CAAzC,CAA4CX,UAA5C,CAAgDC,UAAhD,CAAmDU,CAAnD,CAAuDX,UAAA,EAAvD,CAA4D,CAAA,IACtDY,GAAKd,CAAA,CAAKE,UAAL,CADiD,CACxCa,GAAKD,EAAA,CAAG,CAAH,CADmC,CAC5BE,GAAKF,EAAA,CAAG,CAAH,CADuB,CAChBG,GAAKjB,CAAA,CAAKa,CAAL,CAASK,EAAAA,CAAKD,EAAA,CAAG,CAAH,CAA7D,KAAoEE,GAAKF,EAAA,CAAG,CAAH,CAAzE,CAQEf,UARF,CACoBY,EAAAA,EAAIG,GAAAA,CAAAA,EAAIP,GAAAA,CAAAA,KAOhB,IAAA,UAAA,EAAApC,EAIN,CAAE,CAAF,CAJM,CAAAD,CAIC,CAAE,CAAF,CAJD,GAAA+C,EAIU,CAAE,CAAF,CAJV,CAAA/C,CAIiB,CAAE,CAAF,CAJjB,KAAA+C,EAI4B,CAAE,CAAF,CAJ5B,CAAA/C,CAImC,CAAE,CAAF,CAJnC,GAAAC,EAI4C,CAAE,CAAF,CAJ5C,CAAAD,CAImD,CAAE,CAAF,CAJnD,EAAsB,CAQpC,CARoC,CAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAQpC,CARoC,EAQpC,CARoC,EAAA,CAAA,UAAA,CAQpC,CARoC,EAQpC,CARoC,EAAA,CAAA,UAAA,CAQpC,CAAA,UAAA,CAAOgD,CAAP,EAAYC,EAAZ,EAAiBA,EAAjB,EAAsBC,EAAtB,EAA2BA,EAA3B,EAAgCD,EAAhC,EAAqCA,EAArC,EAA0CD,CAfxC,IAOY,UAPZ,CAAoC,CAAA,CAAA,CAAO,CAAP,OAAA,CAAA,CAC9BL,EAAN,CAAWL,CAAX,GAAmBQ,EAAnB,CAAwBR,CAAxB,EAAiCnC,CAAjC,EAAsC0C,CAAtC,CAA2CH,EAA3C,GAAkDJ,CAAlD,CAAsDK,EAAtD,GAA6DG,EAA7D,CAAkEH,EAAlE,EAAwED,EAAxE,GAA8EH,QAA9E,CAAyF,CAACA,QAA1F,CAH0D,CAK5D,CAAA,CAAOA,QAP0B,CAJjB,GAAQ,CAAR,CAAqC,CAAA,wBAAA,CAAOQ,CAAP,OAAA,CAAA,CAArC,CAChB,wBAAA;AAAO,CAHqB,CAsFtB,GAAoD,EAApD,GAAI,wBAAJ,CAAuD,CACrDX,OAAAH,KAAA,CAAaE,aAAb,CACA,MAFqD,CADC,CAD/B,CAA7B,CASA,OAAO,CACLgB,KAAM,cADD,CAEL7B,MAAOA,KAFF,CAGL8B,YAAa5B,QAHR,CAnBuB,CA4BhCE,QAASA,SAAQ,CAACpB,MAAD,CAASgB,KAAT,CAAgB+B,QAAhB,CAA0B,CAuCzCC,QAASA,OAAM,CAACC,IAAD,CAAO,CAAA,IAChBxC,MAAQ,CAACwC,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAD,CAAcpD,CAAd,CAAiBoD,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAjB,CAA8BjB,CAA9B,CACRkB,KAAAA,CAAM,CAACD,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAD,CAAcpD,CAAd,CAAiBoD,IAAA,CAAK,CAAL,CAAA,CAAQ,CAAR,CAAjB,CAA8BjB,CAA9B,CAFU,KAGhBmB,WAwCY,CAxCZA,CAAmB1C,KAwClB,CAAM,CAAN,CAxCD0C,CAAmB1C,KAwCH,CAAM,CAAN,CAxChB0C,EAwC4BC,EAxC5BD,CAwCiC,CAxCjCA,EAwCsC,CA3CtB,CAIhBE,SAuCY,CAvCZA,CAAiBH,IAuChB,CAAM,CAAN,CAvCDG,CAAiBH,IAuCD,CAAM,CAAN,CAvChBG,EAuC4BD,EAvC5BC,CAuCiC,CAvCjCA,EAuCsC,CA3CtB,CAKhBC,CALgB,CAKbC,CACP,EAAID,CAAJ,CAAQE,aAAA,CAAcL,UAAd,CAAR,EACE,CAAII,CAAJ,CAAQE,eAAA,CAAgBJ,QAAhB,CAAR,GACE,OAAOG,aAAA,CAAcF,CAAAJ,IAAd,CAEP,CADA,OAAOO,eAAA,CAAgBF,CAAA9C,MAAhB,CACP,CAAI6C,CAAJ,GAAUC,CAAV,EACED,CAAAjC,KAAAM,KAAA,CAAYuB,IAAZ,CACA,CAAAH,QAAA,CAASO,CAAAjC,KAAT,CAFF;AAIEoC,eAAA,CAAgBH,CAAA7C,MAAhB,CAJF,CAI6B+C,aAAA,CAAcD,CAAAL,IAAd,CAJ7B,CAIoD,CAACzC,MAAO6C,CAAA7C,MAAR,CAAiByC,IAAKK,CAAAL,IAAtB,CAA6B7B,KAAMiC,CAAAjC,KAAAqC,OAAA,CAAcH,CAAAlC,KAAd,CAAnC,CAPtD,GAUE,OAAOmC,aAAA,CAAcF,CAAAJ,IAAd,CAEP,CADAI,CAAAjC,KAAAM,KAAA,CAAYuB,IAAZ,CACA,CAAAM,aAAA,CAAcF,CAAAJ,IAAd,CAAsBG,QAAtB,CAAA,CAAkCC,CAZpC,CADF,CAeO,CAAIA,CAAJ,CAAQG,eAAA,CAAgBJ,QAAhB,CAAR,EACL,CAAIE,CAAJ,CAAQC,aAAA,CAAcL,UAAd,CAAR,GACE,OAAOM,eAAA,CAAgBH,CAAA7C,MAAhB,CAEP,CADA,OAAO+C,aAAA,CAAcD,CAAAL,IAAd,CACP,CAAII,CAAJ,GAAUC,CAAV,EACED,CAAAjC,KAAAM,KAAA,CAAYuB,IAAZ,CACA,CAAAH,QAAA,CAASO,CAAAjC,KAAT,CAFF,EAIEoC,eAAA,CAAgBF,CAAA9C,MAAhB,CAJF,CAI6B+C,aAAA,CAAcF,CAAAJ,IAAd,CAJ7B,CAIoD,CAACzC,MAAO8C,CAAA9C,MAAR,CAAiByC,IAAKI,CAAAJ,IAAtB,CAA6B7B,KAAMkC,CAAAlC,KAAAqC,OAAA,CAAcJ,CAAAjC,KAAd,CAAnC,CAPtD,GAUE,OAAOoC,eAAA,CAAgBH,CAAA7C,MAAhB,CAEP,CADA6C,CAAAjC,KAAAsC,QAAA,CAAelD,KAAf,CACA,CAAAgD,eAAA,CAAgBH,CAAA7C,MAAhB;AAA0B0C,UAA1B,CAAA,CAAwCG,CAZ1C,CADK,CAgBLG,eAAA,CAAgBN,UAAhB,CAhBK,CAgByBK,aAAA,CAAcH,QAAd,CAhBzB,CAgBmD,CAAC5C,MAAO0C,UAAR,CAAoBD,IAAKG,QAAzB,CAAmChC,KAAM,CAACZ,KAAD,CAAQyC,IAAR,CAAzC,CArCtC,CAvCmB,IACrCO,gBAAkB,EADmB,CAErCD,cAAgB,EAFqB,CAGlCxB,CAGP,KAAAnC,EAAImC,CAAJnC,CAAS,EACT,KAAA+D,GAAK5D,MAAA,CAAO,CAAP,CAAL4D,EAAkB5C,KAElB,KADA6C,KAAA,CAAMD,EAAN,EAAY,CAAZ,CAAAhC,QAAA,CAAuBoB,MAAvB,CACA,CAAO,EAAEnD,CAAT,CAAauD,EAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnB,IAAAU,GAAKF,EAAIA,GAAT,CAAc5D,MAAA,CAAOH,CAAP,CAAW,CAAX,CAAd,EAA+BmB,KAC/B6C,MAAA,CAAMC,EAAN,CAAWF,EAAX,EAAiB,CAAjB,CAAAhC,QAAA,CAA4BoB,MAA5B,CAFmB,CAOrB,IAHAa,KAAA,CAAMD,EAAN,EAAY,CAAZ,CAAAhC,QAAA,CAAuBoB,MAAvB,CAGA,CAAO,EAAEhB,CAAT,CAAa+B,EAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnBlE,CAAA,CAAK,EACL+D,GAAA,CAAK5D,MAAA,CAAOgC,CAAP,CAAWoB,EAAX,CAAgBA,EAAhB,CAAL,EAA4BpC,KAC5B,KAAAgD,GAAKhE,MAAA,CAAOgC,CAAP,CAAWoB,EAAX,CAALY,EAAuBhD,KAEvB,KADA6C,KAAA,CAAMD,EAAN,EAAY,CAAZ,CAAgBI,EAAhB,EAAsB,CAAtB,CAAApC,QAAA,CAAiCoB,MAAjC,CACA,CAAO,EAAEnD,CAAT,CAAauD,EAAb,CAAkB,CAAlB,CAAA,CAAqB,CACnBU,EAAA,CAAKF,EAAIA,GAAT,CAAc5D,MAAA,CAAOgC,CAAP,CAAWoB,EAAX,CAAgBA,EAAhB,CAAqBvD,CAArB,CAAyB,CAAzB,CAAd,EAA6CmB,KAC7C,KAAAiD,GAAKD,EAAIA,GAAT;AAAchE,MAAA,CAAOgC,CAAP,CAAWoB,EAAX,CAAgBvD,CAAhB,CAAoB,CAApB,CAAd,EAAwCmB,KACxC6C,MAAA,CAAMC,EAAN,CAAWF,EAAX,EAAiB,CAAjB,CAAqBI,EAArB,EAA2B,CAA3B,CAA+BC,EAA/B,EAAqC,CAArC,CAAArC,QAAA,CAAgDoB,MAAhD,CAHmB,CAKrBa,KAAA,CAAMD,EAAN,CAAWI,EAAX,EAAiB,CAAjB,CAAApC,QAAA,CAA4BoB,MAA5B,CAVmB,CAcrBnD,CAAA,CAAK,EACLmE,GAAA,CAAKhE,MAAA,CAAOgC,CAAP,CAAWoB,EAAX,CAAL,EAAuBpC,KAEvB,KADA6C,KAAA,CAAMG,EAAN,EAAY,CAAZ,CAAApC,QAAA,CAAuBoB,MAAvB,CACA,CAAO,EAAEnD,CAAT,CAAauD,EAAb,CAAkB,CAAlB,CAAA,CACEa,EACA,CADKD,EACL,CADSA,EACT,CADchE,MAAA,CAAOgC,CAAP,CAAWoB,EAAX,CAAgBvD,CAAhB,CAAoB,CAApB,CACd,EADwCmB,KACxC,CAAA6C,KAAA,CAAMG,EAAN,EAAY,CAAZ,CAAgBC,EAAhB,EAAsB,CAAtB,CAAArC,QAAA,CAAiCoB,MAAjC,CAEFa,MAAA,CAAMG,EAAN,EAAY,CAAZ,CAAApC,QAAA,CAAuBoB,MAAvB,CArCyC,CAqF3CkB,QAASA,aAAY,CAAC7C,IAAD,CAAOrB,MAAP,CAAegB,KAAf,CAAsB,CACzCK,IAAAO,QAAA,CAAa,QAAQ,CAACG,KAAD,CAAQ,CAAA,IACvBlC,EAAIkC,KAAA,CAAM,CAAN,CADmB,CAEvBC,EAAID,KAAA,CAAM,CAAN,CAFmB,CAGvBoC,GAAKtE,CAALsE,CAAS,CAHc,CAIvBC,GAAKpC,CAALoC,CAAS,CAJc,CAMvBC,GAAKrE,MAAA,CAAOoE,EAAP,CAAYhB,EAAZ,CAAiBe,EAAjB,CACT,IAAQ,CAAR,CAAItE,CAAJ,EAAaA,CAAb,CAAiBuD,EAAjB,EAAuBe,EAAvB,GAA8BtE,CAA9B,CAAiC,CAC/B,IAAAyE,GAAKtE,MAAA,CAAOoE,EAAP,CAAYhB,EAAZ,CAAiBe,EAAjB,CAAsB,CAAtB,CACLpC,MAAA,CAAM,CAAN,CAAA,CAAWlC,CAAX,EAAgBmB,KAAhB,CAAwBsD,EAAxB,GAA+BD,EAA/B,CAAoCC,EAApC,EAA0C,EAFX,CAIzB,CAAR,CAAItC,CAAJ,EAAaA,CAAb,CAAiB+B,EAAjB,EAAuBK,EAAvB,GAA8BpC,CAA9B,GACEsC,EACA;AADKtE,MAAA,EAAQoE,EAAR,CAAa,CAAb,EAAkBhB,EAAlB,CAAuBe,EAAvB,CACL,CAAApC,KAAA,CAAM,CAAN,CAAA,CAAWC,CAAX,EAAgBhB,KAAhB,CAAwBsD,EAAxB,GAA+BD,EAA/B,CAAoCC,EAApC,EAA0C,EAF5C,CAX2B,CAA7B,CADyC,CA1IzB,IACdlB,GAAK,CADS,CAEdW,GAAK,CAFS,CAGd7D,UAAYV,OAAA+E,iBAHE,CAIdjD,OAAS4C,YAyJbnE,SAAAkB,QAAA,CAAmBA,OAEnBlB,SAAAyE,KAAA,CAAgBC,QAAQ,CAACC,CAAD,CAAI,CAC1B,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAO,CAAC2B,EAAD,CAAKW,EAAL,CADJ,KAEtBa,GAAK/D,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAFiB,CAEAI,GAAKjE,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAC/B,IAAI,EAAO,CAAP,CAAEE,EAAF,EAAoB,CAApB,CAAeE,EAAf,CAAJ,CAA4B,KAAUC,MAAJ,CAAU,cAAV,CAAN,CAC5B,MAAO3B,GAAA,CAAKwB,EAAL,CAASb,EAAT,CAAce,EAAd,CAAkB/E,QAJC,CAO5BA,SAAAiF,WAAA,CAAsBC,QAAQ,CAACP,CAAD,CAAI,CAChC,MAAOC,UAAAlD,OAAA,EAAoBvB,SAAA,CAAyB,UAAb,GAAA,MAAOwE,EAAP,CAA0BA,CAA1B,CAA8BvE,KAAAC,QAAA,CAAcsE,CAAd,CAAA,CAAmB9E,QAAA,CAASS,KAAA6E,KAAA,CAAWR,CAAX,CAAT,CAAnB,CAA6C9E,QAAA,CAAS8E,CAAT,CAAvF,CAAoG3E,QAAxH,EAAoIG,SAD3G,CAIlCH,SAAAuB,OAAA;AAAkB6D,QAAQ,CAACT,CAAD,CAAI,CAC5B,MAAOC,UAAAlD,OAAA,EAAoBH,MAAA,CAASoD,CAAA,CAAIR,YAAJ,CAAmBpE,IAA5B,CAAkCC,QAAtD,EAAkEuB,MAAlE,GAA6E4C,YADxD,CAI9B,OAAOnE,SA9KW,CAoLpBqF,QAASA,MAAK,CAACC,MAAD,CAASC,MAAT,CAAiB1C,CAAjB,CAAoB,CAIhC,IAJgC,IAC5BpB,EAAI6D,MAAAE,MADwB,CAE5BC,EAAIH,MAAAI,OAFwB,CAG5BC,GAAK9C,CAAL8C,EAAU,CAAVA,EAAe,CAHa,CAIvBxD,EAAI,CAAb,CAAgBA,CAAhB,CAAoBsD,CAApB,CAAuB,EAAEtD,CAAzB,CACE,IAD0B,IACjBX,EAAI,CADa,CACVoE,GAAK,CAArB,CAAwBpE,CAAxB,CAA4BC,CAA5B,CAAgCoB,CAAhC,CAAmC,EAAErB,CAArC,CACMA,CAGJ,CAHQC,CAGR,GAFEmE,EAEF,EAFQN,MAAAO,KAAA,CAAYrE,CAAZ,CAAgBW,CAAhB,CAAoBV,CAApB,CAER,EAAID,CAAJ,EAASqB,CAAT,GACMrB,CAGJ,EAHSmE,CAGT,GAFEC,EAEF,EAFQN,MAAAO,KAAA,CAAYrE,CAAZ,CAAgBmE,CAAhB,CAAoBxD,CAApB,CAAwBV,CAAxB,CAER,EAAA8D,MAAAM,KAAA,CAAYrE,CAAZ,CAAgBqB,CAAhB,CAAoBV,CAApB,CAAwBV,CAAxB,CAAA,CAA6BmE,EAA7B,CAAkC9E,IAAAgF,IAAA,CAAStE,CAAT,CAAa,CAAb,CAAgBC,CAAhB,CAAoB,CAApB,CAAwBkE,CAAxB,CAA4BnE,CAA5B,CAA+BmE,CAA/B,CAJpC,CAT4B,CAsBlCI,QAASA,MAAK,CAACT,MAAD,CAASC,MAAT,CAAiB1C,CAAjB,CAAoB,CAIhC,IAJgC,IAC5BpB,EAAI6D,MAAAE,MADwB,CAE5BC,EAAIH,MAAAI,OAFwB,CAG5BC,GAAK9C,CAAL8C,EAAU,CAAVA,EAAe,CAHa,CAIvBnE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,CAApB,CAAuB,EAAED,CAAzB,CACE,IAD0B,IACjBW,EAAI,CADa,CACVyD,GAAK,CAArB,CAAwBzD,CAAxB,CAA4BsD,CAA5B,CAAgC5C,CAAhC,CAAmC,EAAEV,CAArC,CACMA,CAGJ,CAHQsD,CAGR,GAFEG,EAEF,EAFQN,MAAAO,KAAA,CAAYrE,CAAZ,CAAgBW,CAAhB,CAAoBV,CAApB,CAER;AAAIU,CAAJ,EAASU,CAAT,GACMV,CAGJ,EAHSwD,CAGT,GAFEC,EAEF,EAFQN,MAAAO,KAAA,CAAYrE,CAAZ,EAAiBW,CAAjB,CAAqBwD,CAArB,EAA0BlE,CAA1B,CAER,EAAA8D,MAAAM,KAAA,CAAYrE,CAAZ,EAAiBW,CAAjB,CAAqBU,CAArB,EAA0BpB,CAA1B,CAAA,CAA+BmE,EAA/B,CAAoC9E,IAAAgF,IAAA,CAAS3D,CAAT,CAAa,CAAb,CAAgBsD,CAAhB,CAAoB,CAApB,CAAwBE,CAAxB,CAA4BxD,CAA5B,CAA+BwD,CAA/B,CAJtC,CAT4B,CAmBlCK,QAASA,SAAQ,CAACC,CAAD,CAAI,CACnB,MAAOA,EAAA,CAAE,CAAF,CADY,CAIrBC,QAASA,SAAQ,CAACD,CAAD,CAAI,CACnB,MAAOA,EAAA,CAAE,CAAF,CADY,CAIrBE,QAASA,cAAa,EAAG,CACvB,MAAO,EADgB,CAxSzB,IAAI7F,MAFQF,KAAAgG,UAEA9F,MAAZ,CAgDIwD,MAAQ,CACV,EADU,CAEV,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAFU,CAGV,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAHU,CAIV,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAJU,CAKV,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CALU,CAMV,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CAA2B,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAA3B,CANU,CAOV,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAPU,CAQV,CAAC,CAAC,CAAC,CAAD,CAAM,EAAN,CAAD,CAAa,CAAC,EAAD,CAAM,CAAN,CAAb,CAAD,CARU,CASV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CATU,CAUV,CAAC,CAAC,CAAC,CAAD,CAAM,GAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAVU,CAWV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAA2B,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAA3B,CAXU,CAYV,CAAC,CAAC,CAAC,GAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,EAAN,CAAb,CAAD,CAZU,CAaV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CAbU,CAcV,CAAC,CAAC,CAAC,CAAD;AAAM,GAAN,CAAD,CAAa,CAAC,GAAD,CAAM,CAAN,CAAb,CAAD,CAdU,CAeV,CAAC,CAAC,CAAC,EAAD,CAAM,CAAN,CAAD,CAAa,CAAC,CAAD,CAAM,GAAN,CAAb,CAAD,CAfU,CAgBV,EAhBU,CAgXZ1E,QAAAY,SAAA,CAAmBA,QACnBZ,QAAAiH,eAAA,CArHAC,QAAgB,EAAG,CAajBA,QAASA,QAAO,CAACT,aAAD,CAAO,CAAA,IACjBU,QAAU,IAAIC,YAAJ,CAAiB/E,CAAjB,CAAqBgE,CAArB,CADO,CAEjBgB,QAAU,IAAID,YAAJ,CAAiB/E,CAAjB,CAAqBgE,CAArB,CAEdI,cAAAhE,QAAA,CAAa,QAAQ,CAACoE,CAAD,CAAIzE,CAAJ,CAAOqE,IAAP,CAAa,CAAA,IAC5BxD,GAAM,CAACvC,CAAA,CAAEmG,CAAF,CAAKzE,CAAL,CAAQqE,IAAR,CAAPxD,CAAuBqE,CAAvBrE,EAA6BsE,CADD,CAE5BrE,GAAM,CAACL,CAAA,CAAEgE,CAAF,CAAKzE,CAAL,CAAQqE,IAAR,CAAPvD,CAAuBoE,CAAvBpE,EAA6BqE,CAC7BC,EAAAA,CAAK,CAACC,MAAA,CAAOZ,CAAP,CAAUzE,CAAV,CAAaqE,IAAb,CACA,EAAV,EAAIxD,EAAJ,EAAeA,EAAf,CAAoBZ,CAApB,EAA+B,CAA/B,EAAyBa,EAAzB,EAAoCA,EAApC,CAAyCmD,CAAzC,GACEc,OAAA,CAAQlE,EAAR,CAAaC,EAAb,CAAkBb,CAAlB,CADF,EAC0BmF,CAD1B,CAJgC,CAAlC,CAUAvB,MAAA,CAAM,CAACG,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,OAA5B,CAAN,CAA4C,CAACf,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,OAA5B,CAA5C,CAAkF5D,CAAlF,EAAuF8D,CAAvF,CACAZ,MAAA,CAAM,CAACP,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,OAA5B,CAAN,CAA4C,CAACjB,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,OAA5B,CAA5C,CAAkF1D,CAAlF,EAAuF8D,CAAvF,CACAtB;KAAA,CAAM,CAACG,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,OAA5B,CAAN,CAA4C,CAACf,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,OAA5B,CAA5C,CAAkF5D,CAAlF,EAAuF8D,CAAvF,CACAZ,MAAA,CAAM,CAACP,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,OAA5B,CAAN,CAA4C,CAACjB,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,OAA5B,CAA5C,CAAkF1D,CAAlF,EAAuF8D,CAAvF,CACAtB,MAAA,CAAM,CAACG,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,OAA5B,CAAN,CAA4C,CAACf,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,OAA5B,CAA5C,CAAkF5D,CAAlF,EAAuF8D,CAAvF,CACAZ,MAAA,CAAM,CAACP,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMY,OAA5B,CAAN,CAA4C,CAACjB,MAAO/D,CAAR,CAAWiE,OAAQD,CAAnB,CAAsBI,KAAMU,OAA5B,CAA5C,CAAkF1D,CAAlF,EAAuF8D,CAAvF,CAEIzG,cAAAA,CAAKC,SAAA,CAAUoG,OAAV,CAGJnG,MAAAC,QAAA,CAAcH,aAAd,CAAL,GACMS,OAGJ,CAHWlB,OAAAqH,IAAA,CAAYP,OAAZ,CAGX,CAFArG,aAEA,CAFKT,OAAAmB,SAAA,CAAiB,CAAjB,CAAoBD,OAApB,CAA0BT,aAA1B,CAEL,CADAA,aACA,CADKT,OAAAoB,MAAA,CAAc,CAAd,CAAiBC,IAAAC,MAAA,CAAWJ,OAAX;AAAkBT,aAAlB,CAAjB,CAAyCA,aAAzC,CAA6CA,aAA7C,CACL,CAAAA,aAAA6G,MAAA,EAJF,CAOA,OAAO/G,SAAA,EAAAiF,WAAA,CACS/E,aADT,CAAAuE,KAAA,CAEG,CAAChD,CAAD,CAAIgE,CAAJ,CAFH,CAAA,CAGJc,OAHI,CAAAvF,IAAA,CAIEgG,SAJF,CA/Bc,CAsCvBA,QAASA,UAAS,CAACC,QAAD,CAAW,CAC3BA,QAAAhG,MAAA,EAAkBH,IAAAoG,IAAA,CAAS,CAAT,CAAa,EAAb,CAAiBP,CAAjB,CAClBM,SAAAlE,YAAAlB,QAAA,CAA6BsF,gBAA7B,CACA,OAAOF,SAHoB,CAM7BE,QAASA,iBAAgB,CAACpE,WAAD,CAAc,CACrCA,WAAAlB,QAAA,CAAoBuF,aAApB,CADqC,CAIvCA,QAASA,cAAa,CAACrE,WAAD,CAAc,CAClCA,WAAAlB,QAAA,CAAoBwF,cAApB,CADkC,CAKpCA,QAASA,eAAc,CAACtE,WAAD,CAAc,CACnCA,WAAA,CAAY,CAAZ,CAAA,CAAiBA,WAAA,CAAY,CAAZ,CAAjB,CAAkCjC,IAAAoG,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAlC,CAAmDD,CACnD3D;WAAA,CAAY,CAAZ,CAAA,CAAiBA,WAAA,CAAY,CAAZ,CAAjB,CAAkCjC,IAAAoG,IAAA,CAAS,CAAT,CAAYP,CAAZ,CAAlC,CAAmDD,CAFhB,CAKrCY,QAASA,OAAM,EAAG,CAChBZ,CAAA,CAAQ,CAAR,CAAI7D,CACJpB,EAAA,CAAK4B,EAAL,CAAc,CAAd,CAAUqD,CAAV,EAAoBC,CACpBlB,EAAA,CAAKzB,EAAL,CAAc,CAAd,CAAU0C,CAAV,EAAoBC,CACpB,OAAOL,QAJS,CAvED,IACbxG,EAAIkG,QADS,CAEb/D,EAAIiE,QAFS,CAGbW,OAASV,aAHI,CAIb9C,GAAK,GAJQ,CAKbW,GAAK,GALQ,CAMbnB,EAAI,EANS,CAOb8D,EAAI,CAPS,CAQbD,EAAQ,CAARA,CAAI7D,CARS,CASbpB,EAAK4B,EAAL5B,CAAc,CAAdA,CAAUiF,CAAVjF,EAAoBkF,CATP,CAUblB,EAAKzB,EAALyB,CAAc,CAAdA,CAAUiB,CAAVjB,EAAoBkB,CAVP,CAWbxG,UAAYN,QAAA,CAAS,EAAT,CAmEhByG,QAAAxG,EAAA,CAAYyH,QAAQ,CAAC5C,CAAD,CAAI,CACtB,MAAOC,UAAAlD,OAAA,EAAoB5B,CAAA,CAAiB,UAAb,GAAA,MAAO6E,EAAP,CAA0BA,CAA1B,CAA8B9E,QAAA,CAAS,CAAC8E,CAAV,CAAlC,CAAgD2B,OAApE,EAA+ExG,CADhE,CAIxBwG,QAAArE,EAAA,CAAYuF,QAAQ,CAAC7C,CAAD,CAAI,CACtB,MAAOC,UAAAlD,OAAA,EAAoBO,CAAA,CAAiB,UAAb,GAAA,MAAO0C,EAAP,CAA0BA,CAA1B,CAA8B9E,QAAA,CAAS,CAAC8E,CAAV,CAAlC,CAAgD2B,OAApE,EAA+ErE,CADhE,CAIxBqE,QAAAO,OAAA,CAAiBY,QAAQ,CAAC9C,CAAD,CAAI,CAC3B,MAAOC,UAAAlD,OAAA,EAAoBmF,MAAA,CAAsB,UAAb,GAAA,MAAOlC,EAAP;AAA0BA,CAA1B,CAA8B9E,QAAA,CAAS,CAAC8E,CAAV,CAAvC,CAAqD2B,OAAzE,EAAoFO,MADhE,CAI7BP,QAAA7B,KAAA,CAAeiD,QAAQ,CAAC/C,CAAD,CAAI,CACzB,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAO,CAAC2B,EAAD,CAAKW,EAAL,CADL,KAErBa,GAAK/D,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAFgB,CAECI,GAAKjE,IAAAgE,KAAA,CAAUH,CAAA,CAAE,CAAF,CAAV,CAC/B,IAAI,EAAQ,CAAR,EAAEE,EAAF,EAAsB,CAAtB,EAAgBA,EAAhB,CAAJ,CAA8B,KAAUG,MAAJ,CAAU,cAAV,CAAN,CAC9B,MAAO3B,GAAA,CAAKwB,EAAL,CAASb,EAAT,CAAce,EAAd,CAAkBuC,MAAA,EAJA,CAO3BhB,QAAAqB,SAAA,CAAmBC,QAAQ,CAACjD,CAAD,CAAI,CAC7B,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAO,EAAP,EAAYiF,CACnC,IAAI,EAAc,CAAd,GAAGhC,CAAH,CAAO,CAACA,CAAR,EAAJ,CAAsB,KAAUK,MAAJ,CAAU,mBAAV,CAAN,CACtB,MAAO2B,EAAA,CAAI7F,IAAAC,MAAA,CAAWD,IAAA+G,IAAA,CAASlD,CAAT,CAAX,CAAyB7D,IAAAgH,IAAzB,CAAJ,CAAwCR,MAAA,EAHlB,CAM/BhB,QAAArB,WAAA,CAAqB8C,QAAQ,CAACpD,CAAD,CAAI,CAC/B,MAAOC,UAAAlD,OAAA,EAAoBvB,SAAA,CAAyB,UAAb,GAAA,MAAOwE,EAAP,CAA0BA,CAA1B,CAA8BvE,KAAAC,QAAA,CAAcsE,CAAd,CAAA,CAAmB9E,QAAA,CAASS,KAAA6E,KAAA,CAAWR,CAAX,CAAT,CAAnB;AAA6C9E,QAAA,CAAS8E,CAAT,CAAvF,CAAoG2B,OAAxH,EAAmInG,SAD3G,CAIjCmG,QAAA0B,UAAA,CAAoBC,QAAQ,CAACtD,CAAD,CAAI,CAC9B,GAAI,CAACC,SAAAlD,OAAL,CAAuB,MAAOZ,KAAAoH,KAAA,CAAUrF,CAAV,EAAeA,CAAf,CAAmB,CAAnB,EAC9B,IAAI,EAAc,CAAd,GAAG8B,CAAH,CAAO,CAACA,CAAR,EAAJ,CAAsB,KAAUK,MAAJ,CAAU,mBAAV,CAAN,CACtB,MAAOnC,EAAA,CAAI/B,IAAAqH,MAAA,EAAYrH,IAAAoH,KAAA,CAAU,CAAV,CAAcvD,CAAd,CAAkBA,CAAlB,CAAsB,CAAtB,CAAZ,CAAuC,CAAvC,EAA4C,CAA5C,CAAJ,CAAoD2C,MAAA,EAH7B,CAMhC,OAAOhB,QAjHU,CAuHnB8B,OAAAC,eAAA,CAAsBjJ,OAAtB,CAA+B,YAA/B,CAA6C,CAAE6B,MAAO,CAAA,CAAT,CAA7C,CAvaoC,CAJnC,CAF0G;",
"sources":["node_modules/d3-contour/dist/d3-contour.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_contour$dist$d3_contour\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-contour/ v1.3.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold = d3Array.thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = d3Array.extent(values), start = domain[0], stop = domain[1];\n      tz = d3Array.tickStep(start, stop, tz);\n      tz = d3Array.range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = d3Array.max(values0);\n      tz = d3Array.tickStep(0, stop, tz);\n      tz = d3Array.range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nexports.contours = contours;\nexports.contourDensity = density;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","d3","d3Array","ascending","a","b","constant","x","noop","contours","values","tz","threshold","Array","isArray","slice","sort","domain","extent","start","stop","tickStep","range","Math","floor","map","value","contour","polygons","holes","isorings","ring","smooth","i","n","length","area","push","forEach","hole","polygon","point","y","contains","j","pi","xi","yi","pj","xj","yj","c","p","q","r","type","coordinates","callback","stitch","line","end","startIndex","dx","endIndex","f","g","fragmentByEnd","fragmentByStart","concat","unshift","t1","cases","t0","dy","t2","t3","smoothLinear","xt","yt","v1","v0","thresholdSturges","size","contours.size","_","arguments","_0","ceil","_1","Error","thresholds","contours.thresholds","call","contours.smooth","blurX","source","target","width","m","height","w","sr","data","min","blurY","defaultX","d","defaultY","defaultWeight","prototype","contourDensity","density","values0","Float32Array","values1","o","k","wi","weight","max","shift","transform","geometry","pow","transformPolygon","transformRing","transformPoint","resize","density.x","density.y","density.weight","density.size","cellSize","density.cellSize","log","LN2","density.thresholds","bandwidth","density.bandwidth","sqrt","round","Object","defineProperty"]
}
