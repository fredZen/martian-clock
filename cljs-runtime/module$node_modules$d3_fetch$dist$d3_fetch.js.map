{
"version":3,
"file":"module$node_modules$d3_fetch$dist$d3_fetch.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/d3-fetch/dist/d3-fetch.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_fetch$dist$d3_fetch\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-fetch/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv;\nexports.tsv = tsv;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","d3","d3Dsv","responseBlob","response","ok","Error","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","text","input","init","fetch","then","dsvParse","parse","row","arguments","length","undefined","responseJson","json","parser","type","text$$1","parseFromString","DOMParser","csv","csvParse","tsv","tsvParse","xml","html","svg","buffer","dsv","delimiter","format","dsvFormat","image","Promise","resolve","reject","Image","key","onerror","onload","image.onload","src","Object","defineProperty","value"]
}
