shadow$provide.module$node_modules$d3_contour$dist$d3_contour=function(global$jscomp$0,require,module,exports$jscomp$0){(function(global,factory){"object"===typeof exports$jscomp$0&&"undefined"!==typeof module?factory(exports$jscomp$0,require("module$node_modules$d3_array$dist$d3_array")):"function"===typeof define&&define.amd?define(["exports","d3-array"],factory):factory(global.d3=global.d3||{},global.d3)})(this,function(exports,d3Array){function ascending(a,b){return a-b}function constant(x){return function(){return x}}
function noop(){}function contours(){function contours(values){var tz=threshold(values);if(Array.isArray(tz))tz=tz.slice().sort(ascending);else{var domain=d3Array.extent(values),start=domain[0];domain=domain[1];tz=d3Array.tickStep(start,domain,tz);tz=d3Array.range(Math.floor(start/tz)*tz,Math.floor(domain/tz)*tz,tz)}return tz.map(function(value){return contour(values,value)})}function contour(values,value){var polygons=[],holes=[];isorings(values,value,function(ring){smooth(ring,values,value);for(var i=
0,n=ring.length,area=ring[n-1][1]*ring[0][0]-ring[n-1][0]*ring[0][1];++i<n;)area+=ring[i-1][1]*ring[i][0]-ring[i-1][0]*ring[i][1];0<area?polygons.push([ring]):holes.push(ring)});holes.forEach(function(hole$jscomp$0){for(var i=0,n=polygons.length,polygon;i<n;++i){a:{var JSCompiler_inline_result=(polygon=polygons[i])[0];for(var hole=hole$jscomp$0,i$jscomp$0=-1,n$jscomp$0=hole.length;++i$jscomp$0<n$jscomp$0;){b:{var c=JSCompiler_inline_result;for(var point=hole[i$jscomp$0],x=point[0],y=point[1],contains=
-1,i$jscomp$1=0,n$jscomp$1=c.length,j=n$jscomp$1-1;i$jscomp$1<n$jscomp$1;j=i$jscomp$1++){var pi=c[i$jscomp$1],xi=pi[0],yi=pi[1],pj=c[j];j=pj[0];var yj=pj[1],i$jscomp$2,a=pi;pi=pj;pj=point;if(i$jscomp$2=(pi[0]-a[0])*(pj[1]-a[1])===(pj[0]-a[0])*(pi[1]-a[1]))a=a[i$jscomp$2=+(a[0]===pi[0])],pj=pj[i$jscomp$2],pi=pi[i$jscomp$2],i$jscomp$2=a<=pj&&pj<=pi||pi<=pj&&pj<=a;if(i$jscomp$2){c=0;break b}yi>y!==yj>y&&x<(j-xi)*(y-yi)/(yj-yi)+xi&&(contains=-contains)}c=contains}if(c){JSCompiler_inline_result=c;break a}}JSCompiler_inline_result=
0}if(-1!==JSCompiler_inline_result){polygon.push(hole$jscomp$0);break}}});return{type:"MultiPolygon",value:value,coordinates:polygons}}function isorings(values,value,callback){function stitch(line){var start=[line[0][0]+x,line[0][1]+y];line=[line[1][0]+x,line[1][1]+y];var startIndex=2*start[0]+start[1]*(dx+1)*4,endIndex=2*line[0]+line[1]*(dx+1)*4,f,g;(f=fragmentByEnd[startIndex])?(g=fragmentByStart[endIndex])?(delete fragmentByEnd[f.end],delete fragmentByStart[g.start],f===g?(f.ring.push(line),callback(f.ring)):
fragmentByStart[f.start]=fragmentByEnd[g.end]={start:f.start,end:g.end,ring:f.ring.concat(g.ring)}):(delete fragmentByEnd[f.end],f.ring.push(line),fragmentByEnd[f.end=endIndex]=f):(f=fragmentByStart[endIndex])?(g=fragmentByEnd[startIndex])?(delete fragmentByStart[f.start],delete fragmentByEnd[g.end],f===g?(f.ring.push(line),callback(f.ring)):fragmentByStart[g.start]=fragmentByEnd[f.end]={start:g.start,end:f.end,ring:g.ring.concat(f.ring)}):(delete fragmentByStart[f.start],f.ring.unshift(start),fragmentByStart[f.start=
startIndex]=f):fragmentByStart[startIndex]=fragmentByEnd[endIndex]={start:startIndex,end:endIndex,ring:[start,line]}}var fragmentByStart=[],fragmentByEnd=[],y;var x=y=-1;var t1=values[0]>=value;for(cases[t1<<1].forEach(stitch);++x<dx-1;){var t0=t1;t1=values[x+1]>=value;cases[t0|t1<<1].forEach(stitch)}for(cases[t1<<0].forEach(stitch);++y<dy-1;){x=-1;t1=values[y*dx+dx]>=value;var t2=values[y*dx]>=value;for(cases[t1<<1|t2<<2].forEach(stitch);++x<dx-1;){t0=t1;t1=values[y*dx+dx+x+1]>=value;var t3=t2;t2=
values[y*dx+x+1]>=value;cases[t0|t1<<1|t2<<2|t3<<3].forEach(stitch)}cases[t1|t2<<3].forEach(stitch)}x=-1;t2=values[y*dx]>=value;for(cases[t2<<2].forEach(stitch);++x<dx-1;)t3=t2,t2=values[y*dx+x+1]>=value,cases[t2<<2|t3<<3].forEach(stitch);cases[t2<<3].forEach(stitch)}function smoothLinear(ring,values,value){ring.forEach(function(point){var x=point[0],y=point[1],xt=x|0,yt=y|0,v1=values[yt*dx+xt];if(0<x&&x<dx&&xt===x){var v0=values[yt*dx+xt-1];point[0]=x+(value-v0)/(v1-v0)-.5}0<y&&y<dy&&yt===y&&(v0=
values[(yt-1)*dx+xt],point[1]=y+(value-v0)/(v1-v0)-.5)})}var dx=1,dy=1,threshold=d3Array.thresholdSturges,smooth=smoothLinear;contours.contour=contour;contours.size=function(_){if(!arguments.length)return[dx,dy];var _0=Math.ceil(_[0]),_1=Math.ceil(_[1]);if(!(0<_0&&0<_1))throw Error("invalid size");return dx=_0,dy=_1,contours};contours.thresholds=function(_){return arguments.length?(threshold="function"===typeof _?_:Array.isArray(_)?constant(slice.call(_)):constant(_),contours):threshold};contours.smooth=
function(_){return arguments.length?(smooth=_?smoothLinear:noop,contours):smooth===smoothLinear};return contours}function blurX(source,target,r){for(var n=source.width,m=source.height,w=(r<<1)+1,j=0;j<m;++j)for(var i=0,sr=0;i<n+r;++i)i<n&&(sr+=source.data[i+j*n]),i>=r&&(i>=w&&(sr-=source.data[i-w+j*n]),target.data[i-r+j*n]=sr/Math.min(i+1,n-1+w-i,w))}function blurY(source,target,r){for(var n=source.width,m=source.height,w=(r<<1)+1,i=0;i<n;++i)for(var j=0,sr=0;j<m+r;++j)j<m&&(sr+=source.data[i+j*n]),
j>=r&&(j>=w&&(sr-=source.data[i+(j-w)*n]),target.data[i+(j-r)*n]=sr/Math.min(j+1,m-1+w-j,w))}function defaultX(d){return d[0]}function defaultY(d){return d[1]}function defaultWeight(){return 1}var slice=Array.prototype.slice,cases=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,
1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];exports.contours=contours;exports.contourDensity=function(){function density(data$jscomp$0){var values0=new Float32Array(n*m),values1=new Float32Array(n*m);data$jscomp$0.forEach(function(d,i,data){var xi=+x(d,i,data)+o>>k,yi=+y(d,i,data)+o>>k;d=+weight(d,i,data);0<=xi&&xi<n&&0<=yi&&yi<m&&(values0[xi+yi*n]+=d)});blurX({width:n,height:m,data:values0},{width:n,height:m,data:values1},r>>k);blurY({width:n,height:m,data:values1},{width:n,height:m,data:values0},r>>k);
blurX({width:n,height:m,data:values0},{width:n,height:m,data:values1},r>>k);blurY({width:n,height:m,data:values1},{width:n,height:m,data:values0},r>>k);blurX({width:n,height:m,data:values0},{width:n,height:m,data:values1},r>>k);blurY({width:n,height:m,data:values1},{width:n,height:m,data:values0},r>>k);data$jscomp$0=threshold(values0);Array.isArray(data$jscomp$0)||(values1=d3Array.max(values0),data$jscomp$0=d3Array.tickStep(0,values1,data$jscomp$0),data$jscomp$0=d3Array.range(0,Math.floor(values1/
data$jscomp$0)*data$jscomp$0,data$jscomp$0),data$jscomp$0.shift());return contours().thresholds(data$jscomp$0).size([n,m])(values0).map(transform)}function transform(geometry){geometry.value*=Math.pow(2,-2*k);geometry.coordinates.forEach(transformPolygon);return geometry}function transformPolygon(coordinates){coordinates.forEach(transformRing)}function transformRing(coordinates){coordinates.forEach(transformPoint)}function transformPoint(coordinates){coordinates[0]=coordinates[0]*Math.pow(2,k)-o;
coordinates[1]=coordinates[1]*Math.pow(2,k)-o}function resize(){o=3*r;n=dx+2*o>>k;m=dy+2*o>>k;return density}var x=defaultX,y=defaultY,weight=defaultWeight,dx=960,dy=500,r=20,k=2,o=3*r,n=dx+2*o>>k,m=dy+2*o>>k,threshold=constant(20);density.x=function(_){return arguments.length?(x="function"===typeof _?_:constant(+_),density):x};density.y=function(_){return arguments.length?(y="function"===typeof _?_:constant(+_),density):y};density.weight=function(_){return arguments.length?(weight="function"===typeof _?
_:constant(+_),density):weight};density.size=function(_){if(!arguments.length)return[dx,dy];var _0=Math.ceil(_[0]),_1=Math.ceil(_[1]);if(!(0<=_0||0<=_0))throw Error("invalid size");return dx=_0,dy=_1,resize()};density.cellSize=function(_){if(!arguments.length)return 1<<k;if(!(1<=(_=+_)))throw Error("invalid cell size");return k=Math.floor(Math.log(_)/Math.LN2),resize()};density.thresholds=function(_){return arguments.length?(threshold="function"===typeof _?_:Array.isArray(_)?constant(slice.call(_)):
constant(_),density):threshold};density.bandwidth=function(_){if(!arguments.length)return Math.sqrt(r*(r+1));if(!(0<=(_=+_)))throw Error("invalid bandwidth");return r=Math.round((Math.sqrt(4*_*_+1)-1)/2),resize()};return density};Object.defineProperty(exports,"__esModule",{value:!0})})}
//# sourceMappingURL=module$node_modules$d3_contour$dist$d3_contour.js.map
