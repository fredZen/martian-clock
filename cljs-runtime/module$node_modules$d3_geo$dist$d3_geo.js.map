{
"version":3,
"file":"module$node_modules$d3_geo$dist$d3_geo.js",
"lineCount":119,
"mappings":"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",
"sources":["node_modules/d3-geo/dist/d3-geo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_geo$dist$d3_geo\"] = function(global,require,module,exports) {\n// https://d3js.org/d3-geo/ v1.11.6 Copyright 2019 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Array) { 'use strict';\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305\u2013363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nfunction adder() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360\u00b0) % 360\u00b0, except that we want\n// the distance between \u00b1180\u00b0 to be 360\u00b0.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0\u00b0, 0\u00b0], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nfunction circle() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nfunction polygonContains(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign$$1 * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2a2f n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum = adder(),\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nvar areaSum$1 = adder(),\n    areaRingSum$1 = adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform$$1(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform$$1;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform$$1(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform$$1.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform$$1;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform$$1 = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform$$1);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960\u00d7500. The projection also works quite well at 960\u00d7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nfunction equalEarth() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction scaleTranslate$1(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nfunction identity$1() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform$$1 = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform$$1(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform$$1 = scaleTranslate$1(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent;\nexports.geoClipRectangle = clipRectangle;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoPath = index;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEqualEarth = equalEarth;\nexports.geoEqualEarthRaw = equalEarthRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$1;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","d3","d3Array","Adder","reset","add","adder","a","b","x","s","bv","t","acos","pi","Math","asin","halfPi","haversin","sin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamLine","coordinates","closed","i","n","length","lineStart","coordinate","point","lineEnd","streamPolygon","polygonStart","polygonEnd","geoStream","object","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","areaRingSum","atan2","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","sqrt","boundsPoint","ranges","push","range","lambda0$1","lambda1","phi0","phi1","linePoint","p","p0","normal","inflection","equatorial","delta","lambda2","sign$$1","lambdai","degrees","antimeridian","abs","phii","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","y","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","x0","y0","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","m","X2","Y2","Z2","constant","compose","invert","compose.invert","rotationIdentity","round","tau","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rotation.invert","rotate","forward","forward.invert","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","clipBuffer","lines","line","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","e","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p1","sort","link","start","current","isSubject","array","longitude","sign","polygonContains","polygon","winding","sum","ring","point0","j","sinPhi1","cosPhi1","point1","absDelta","arc","intersection","phiArc","pointVisible","clipLine","sink","pointLine","pointRing","ringSink","ringStart","ringEnd","clean","ringSegments","ringBuffer","polygonStarted","filter","validSegment","merge","sphere","clipCircle","visible","cr","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","uu","t2","q","polar","q1","code","r","smallRadius","notHemisphere","c0","v0","v00","c","point2","from","to","x1","y1","ax","ay","dx","bx","dy","by","clipRectangle","a1","corner","comparePoint","ca","cb","activeStream","first","x__","y__","v__","v_","x_","max","clipMin","min","clipMax","y_","bufferStream","clipStream","NaN","b0","b1","a0","cleanInside","lengthLineEnd","lengthStream","lengthPointFirst","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","distance","containsGeometry","containsGeometryType","containsLine","ao","bo","ab","pow","epsilon2","containsPolygon","map","ringRadians","pointRadians","graticuleX","graticuleY","graticule","ceil","DX","X","DY","Y","precision","graticule.lines","outline","graticule.outline","slice","reverse","extent","graticule.extent","_","arguments","extentMajor","extentMinor","graticule.extentMajor","graticule.extentMinor","graticule.step","stepMajor","stepMinor","graticule.stepMajor","graticule.stepMinor","graticule.precision","identity","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","context","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","transformer","methods","TransformStream","key","fit","projection","fitBounds","clipExtent","scale","translate","boundsStream$1","fitExtent","h","fitWidth","width","fitHeight","height","resampleNone","project","resample$1","delta2","resampleLineTo","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","a00","b00","c00","transformRotate","scaleTranslate","transform$$1","transform$$1.invert","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectRotateTransform","recenter","center","apply","projectTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","projectResample","projection.stream","transformRadians","projection.preclip","undefined","projection.postclip","clipAngle","projection.clipAngle","projection.clipExtent","projection.scale","projection.translate","projection.center","projection.rotate","projection.angle","projection.precision","projection.fitExtent","fitSize","projection.fitSize","size","projection.fitWidth","projection.fitHeight","conicProjection","parallels","p.parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0","sy0","project.invert","r0y","conicEqualArea","albers","multiplex","streams","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log","tan","mercatorProjection","reclip","m.scale","m.translate","m.center","m.clipExtent","conicConformalRaw","f","cy0","fy","atan","equirectangularRaw","conicEquidistantRaw","gy","g","nx","equalEarthRaw","M","l2","l6","A1","A2","A3","A4","gnomonicRaw","scaleTranslate$1","kx","ky","tx","ty","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","prototype","constructor","temp","valueOf","PI","exp","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","clipAntimeridianLine","sign0","sign1","sinLambda0Lambda1","clipAntimeridianInterpolate","lengthLineStart","containsObjectType","areaSum$1","area","x0$2","Infinity","y0$2","boundsPoint$1","bounds","centroid","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","_circle","join","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw.invert","equalEarthRaw.invert","iterations","fpy","naturalEarth1Raw.invert","transverseMercatorRaw.invert","geoArea","geoBounds","feature","merged","deltaMax","geoCentroid","geoCircle","circle","circle.center","circle.radius","circle.precision","geoClipAntimeridian","geoClipCircle","geoClipExtent","geoClipRectangle","geoContains","contains","geoDistance","geoGraticule","geoGraticule10","graticule10","geoInterpolate","cy1","sy1","kx0","ky0","kx1","ky1","geoLength","geoPath","index","path","contextStream","projectionStream","path.area","measure","path.measure","path.bounds","path.centroid","path.projection","path.context","path.pointRadius","geoAlbers","geoAlbersUsa","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa.invert","albersUsa.stream","albersUsa.precision","albersUsa.scale","albersUsa.translate","albersUsa.fitExtent","albersUsa.fitSize","albersUsa.fitWidth","albersUsa.fitHeight","geoAzimuthalEqualArea","azimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","azimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","conicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","conicEquidistant","geoConicEquidistantRaw","geoEqualEarth","equalEarth","geoEqualEarthRaw","geoEquirectangular","equirectangular","geoEquirectangularRaw","geoGnomonic","gnomonic","geoGnomonicRaw","geoIdentity","identity$1","sx","sy","reflectX","reflectY","geoProjection","geoProjectionMutator","geoMercator","mercator","geoMercatorRaw","geoNaturalEarth1","naturalEarth1","geoNaturalEarth1Raw","geoOrthographic","orthographic","geoOrthographicRaw","geoStereographic","stereographic","geoStereographicRaw","geoTransverseMercator","transverseMercator","m.rotate","geoTransverseMercatorRaw","geoRotation","geoTransform","transform","Object","defineProperty","value"]
}
